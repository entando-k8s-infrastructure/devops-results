
Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-credential-initializer-2hpkn[0m
{"level":"warn","ts":1599664691.8149421,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1599664691.8221283,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-working-dir-initializer-rglzn[0m
{"level":"warn","ts":1599664693.2631547,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1599664693.2785256,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully e**cuted command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-place-tools[0m

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-source-entando-k8s-entando-k8s-cluster-4hs26[0m
{"level":"warn","ts":1599664758.8013234,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1599664760.1353343,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/entando-k8s/entando-k8s-cluster-infrastructure-controller.git @ master in path /workspace/source"}

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:c1b8cef74f51fe1d03aa0ee6cf7dd058475ef416,9:f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8
DEBUG: ran git fetch --unshallow origin f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8: c1b8cef74f51fe1d03aa0ee6cf7dd058475ef416: in 
DEBUG: ran git checkout master in 
DEBUG: ran git reset --hard c1b8cef74f51fe1d03aa0ee6cf7dd058475ef416 in 
DEBUG: ran clean --force -d . in 
DEBUG: ran git merge f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8 in 
Merged SHA f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8 with commit message 'Merge branch 'master' of github.com:entando-k8s/entando-k8s-cluster-infrastructure-controller into ENG-1218_configurable_resource_requirements' into base branch master
Merged SHA 9ce21d1e7bae3e1c5d5813e8509c612791b31679 with commit message 'ENG-1218 configurable resource requirements' into base branch master

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-set-version[0m
Picked up _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms1000m -Xmx12000m
[INFO] Scanning for projects...
[INFO] 
[INFO] -----< org.entando:entando-k8s-cluster-infrastructure-controller >------
[INFO] Building Entando K8S Controller for Entando Cluster Infrastructure Deployments 6.2.0-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- versions-maven-plugin:2.8.1:set (default-cli) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Local aggregation ****: /workspace/source
[INFO] Processing change of org.entando:entando-k8s-cluster-infrastructure-controller:6.2.0-SNAPSHOT -> 0.0.0-SNAPSHOT-PR-9-1
[INFO] Processing org.entando:entando-k8s-cluster-infrastructure-controller
[INFO]     Updating project org.entando:entando-k8s-cluster-infrastructure-controller
[INFO]         from version 6.2.0-SNAPSHOT to 0.0.0-SNAPSHOT-PR-9-1
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  11.642 s
[INFO] Finished at: 2020-09-09T15:19:37Z
[INFO] ------------------------------------------------------------------------

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-fix-git-for-sonar[0m
Switched to a new branch 'PR-9'
M	pom.xml
Deleted branch master (was f5da7a2).
From https://github.com/entando-k8s/entando-k8s-cluster-infrastructure-controller
 * [new branch]      master     -> master

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-mvn-verify-pr[0m
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 12  1922    0     0  100   236      0    324 --:--:-- --:--:-- --:--:--   325100  1922  100  1686  100   236   2318    324 --:--:-- --:--:-- --:--:--  2328
{
  "url": "https://api.github.com/repos/entando-k8s/entando-k8s-cluster-infrastructure-controller/statuses/f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 10715340605,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMDcxNTM0MDYwNQ==",
  "state": "pending",
  "description": "Pre-deployment tests pending!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-k8s-cluster-infrastructure-controller/PR-9/surefire-report.html",
  "context": "Pre-deployment tests",
  "created_at": "2020-09-09T15:19:39Z",
  "updated_at": "2020-09-09T15:19:39Z",
  "creator": {
    "login": "entando-**",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/**********",
    "html_url": "https://github.com/entando-**",
    "followers_url": "https://api.github.com/users/entando-**/followers",
    "following_url": "https://api.github.com/users/entando-**/following{/other_user}",
    "gists_url": "https://api.github.com/users/**********/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/entando-**/subscriptions",
    "organizations_url": "https://api.github.com/users/entando-**/orgs",
    "repos_url": "https://api.github.com/users/**********/repos",
    "events_url": "https://api.github.com/users/entando-**/events{/privacy}",
    "received_events_url": "https://api.github.com/users/entando-**/received_events",
    "type": "User",
    "site_*****": false
  }
}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
{
  "url": "https://api.github.com/repos/entando-k8s/entando-k8s-cluster-infrastructure-controller/statuses/f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 10715340761,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMDcxNTM0MDc2MQ==",
  "state": "pending",
  "description": "Post-deployment tests pending!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-k8s-cluster-infrastructure-controller/PR-9/failsafe-report.html",
  "context": "Post-deployment tests",
  "created_at": "2020-09-09T15:19:40Z",
  "updated_at": "2020-09-09T15:19:40Z",
  "creator": {
    "login": "entando-**",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/entando-**",
    "html_url": "https://github.com/**********",
    "followers_url": "https://api.github.com/users/**********/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/entando-**/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/entando-**/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/entando-**/subscriptions",
    "organizations_url": "https://api.github.com/users/entando-**/orgs",
    "repos_url": "https://api.github.com/users/entando-**/repos",
    "events_url": "https://api.github.com/users/entando-**/events{/privacy}",
    "received_events_url": "https://api.github.com/users/entando-**/received_events",
    "type": "User",
    "site_*****": false
  }
}
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  1926  100  1688  100   238   2489    350 --:--:-- --:--:-- --:--:--  2504
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 11  1872    0     0  100   211      0    325 --:--:-- --:--:-- --:--:--   325100  1872  100  1661  100   211   2564    325 --:--:-- --:--:-- --:--:--  2563
{
  "url": "https://api.github.com/repos/entando-k8s/entando-k8s-cluster-infrastructure-controller/statuses/f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 10715340905,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMDcxNTM0MDkwNQ==",
  "state": "pending",
  "description": "Checkstyle pending!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-k8s-cluster-infrastructure-controller/PR-9/checkstyle.html",
  "context": "Checkstyle",
  "created_at": "2020-09-09T15:19:40Z",
  "updated_at": "2020-09-09T15:19:40Z",
  "creator": {
    "login": "entando-**",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/entando-**",
    "html_url": "https://github.com/**********",
    "followers_url": "https://api.github.com/users/entando-**/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/entando-**/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/entando-**/subscriptions",
    "organizations_url": "https://api.github.com/users/entando-**/orgs",
    "repos_url": "https://api.github.com/users/entando-**/repos",
    "events_url": "https://api.github.com/users/entando-**/events{/privacy}",
    "received_events_url": "https://api.github.com/users/entando-**/received_events",
    "type": "User",
    "site_*****": false
  }
}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 11  1894    0     0  100   222      0    362 --:--:-- --:--:-- --:--:--   362100  1894  100  1672  100   222   2728    362 --:--:-- --:--:-- --:--:--  2727
{
  "url": "https://api.github.com/repos/entando-k8s/entando-k8s-cluster-infrastructure-controller/statuses/f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 10715341018,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMDcxNTM0MTAxOA==",
  "state": "pending",
  "description": "OWASP CVE pending!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-report.html",
  "context": "OWASP CVE",
  "created_at": "2020-09-09T15:19:41Z",
  "updated_at": "2020-09-09T15:19:41Z",
  "creator": {
    "login": "entando-**",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/entando-**",
    "html_url": "https://github.com/entando-**",
    "followers_url": "https://api.github.com/users/entando-**/followers",
    "following_url": "https://api.github.com/users/entando-**/following{/other_user}",
    "gists_url": "https://api.github.com/users/entando-**/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/entando-**/subscriptions",
    "organizations_url": "https://api.github.com/users/entando-**/orgs",
    "repos_url": "https://api.github.com/users/entando-**/repos",
    "events_url": "https://api.github.com/users/**********/events{/privacy}",
    "received_events_url": "https://api.github.com/users/entando-**/received_events",
    "type": "User",
    "site_*****": false
  }
}
Picked up _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms1000m -Xmx12000m
[INFO] Scanning for projects...
[INFO] 
[INFO] -----< org.entando:entando-k8s-cluster-infrastructure-controller >------
[INFO] Building Entando K8S Controller for Entando Cluster Infrastructure Deployments 0.0.0-SNAPSHOT-PR-9-1
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.1:check (validate) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.1:checkstyle (validate) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Starting audit...
Audit done.
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (prepare-agent) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] argLine set to -javaagent:/home/jenkins/.mvnrepository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/workspace/source/target/jacoco.e**c
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 4 source files to /workspace/source/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /workspace/source/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M1:test (default-test) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.entando.kubernetes.controller.clusterinfrastructure.inprocesstests.DeployEntandoClusterInfrastructureTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.802 s - in org.entando.kubernetes.controller.clusterinfrastructure.inprocesstests.DeployEntandoClusterInfrastructureTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Building jar: /workspace/source/target/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1.jar
[INFO] 
[INFO] --- maven-jar-plugin:3.2.0:test-jar (build-test-jar) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Building jar: /workspace/source/target/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1-tests.jar
[INFO] 
[INFO] --- quarkus-maven-plugin:1.2.0.Final:build (default) @ entando-k8s-cluster-infrastructure-controller ---
[WARNING] [io.quarkus.creator.curator.Curator] These dependencies are not recommended:
	- jakarta.xml.bind:jakarta.xml.bind-api should be replaced by org.jboss.spec.javax.xml.bind:jboss-jaxb-api_2.3_spec
	- javax.activation:activation should be replaced by com.sun.activation:jakarta.activation
You might end up with two different versions of the same classes or with an artifact you shouldn't have in your classpath.
[INFO] [org.jboss.threads] JBoss Threads version 3.0.0.Final
[INFO] [io.quarkus.deployment.pkg.steps.JarResultBuildStep] Building thin jar: /workspace/source/target/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1-runner.jar
[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 2324ms
[INFO] 
[INFO] --- maven-surefire-report-plugin:3.0.0-M4:failsafe-report-only (integration-tests) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] 
[INFO] --- dependency-check-maven:5.3.2:aggregate (default) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] 

Dependency-Check is an open source tool performing a best effort analysis of 3rd party dependencies; false positives and false negatives may exist in the analysis performed by the tool. Use of the tool and the reporting provided constitutes acceptance for use in an AS IS condition, and there are NO warranties, implied or otherwise, with regard to the analysis or its use. Any use of the tool and the reporting provided is at the user’s risk. In no event shall the copyright holder or OWASP be held liable for any damages whatsoever arising out of or in connection with the use of this tool, the analysis performed, or the resulting report.


[INFO] Analysis Started
[INFO] Finished Archive Analyzer (0 seconds)
[INFO] Finished File Name Analyzer (0 seconds)
[INFO] Finished Jar Analyzer (0 seconds)
[INFO] Finished Dependency Merging Analyzer (0 seconds)
[INFO] Finished Version Filter Analyzer (0 seconds)
[INFO] Finished Hint Analyzer (0 seconds)
[INFO] Created CPE Index (2 seconds)
[INFO] Finished CPE Analyzer (4 seconds)
[INFO] Finished False Positive Analyzer (0 seconds)
[INFO] Finished NVD CVE Analyzer (0 seconds)
[INFO] Finished Sonatype OSS Index Analyzer (1 seconds)
[INFO] Finished Vulnerability Suppression Analyzer (0 seconds)
[INFO] Finished Dependency Bundling Analyzer (0 seconds)
[INFO] Analysis Complete (8 seconds)
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Loading e**cution data file /workspace/source/target/jacoco.e**c
[INFO] Analyzed bundle 'Entando K8S Controller for Entando Cluster Infrastructure Deployments' with 4 classes
[INFO] 
[INFO] --- maven-surefire-report-plugin:3.0.0-M4:report-only (unit-tests) @ entando-k8s-cluster-infrastructure-controller ---
[WARNING] Unable to locate Test Source XRef to link to - DISABLED
[INFO] 
[INFO] --- maven-install-plugin:2.4:install (default-install) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] Installing /workspace/source/target/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1.jar to /home/jenkins/.mvnrepository/org/entando/entando-k8s-cluster-infrastructure-controller/0.0.0-SNAPSHOT-PR-9-1/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1.jar
[INFO] Installing /workspace/source/pom.xml to /home/jenkins/.mvnrepository/org/entando/entando-k8s-cluster-infrastructure-controller/0.0.0-SNAPSHOT-PR-9-1/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1.pom
[INFO] Installing /workspace/source/target/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1-tests.jar to /home/jenkins/.mvnrepository/org/entando/entando-k8s-cluster-infrastructure-controller/0.0.0-SNAPSHOT-PR-9-1/entando-k8s-cluster-infrastructure-controller-0.0.0-SNAPSHOT-PR-9-1-tests.jar
[INFO] 
[INFO] --- maven-site-plugin:3.9.0:site (default-site) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] configuring report plugin org.apache.maven.plugins:maven-project-info-reports-plugin:3.0.0
[INFO] 9 reports configured for maven-project-info-reports-plugin:3.0.0: dependency-info, distribution-management, index, ci-management, issue-management, licenses, plugins, scm, summary
[INFO] Rendering site with default locale English (en)
[WARNING] Unable to find a URL to the parent project. The parent menu will NOT be added.
[INFO] Relativizing decoration links with respect to localized project URL: https://central.entando.com
[INFO] Rendering content with org.apache.maven.skins:maven-default-skin:jar:1.3 skin.
[INFO] Generating "Dependency Information" report --- maven-project-info-reports-plugin:3.0.0:dependency-info
[INFO] Generating "About" report         --- maven-project-info-reports-plugin:3.0.0:index
[INFO] Generating "Issue Management" report --- maven-project-info-reports-plugin:3.0.0:issue-management
[INFO] Generating "Licenses" report      --- maven-project-info-reports-plugin:3.0.0:licenses
[INFO] Generating "Plugins" report       --- maven-project-info-reports-plugin:3.0.0:plugins
[INFO] Generating "Source Code Management" report --- maven-project-info-reports-plugin:3.0.0:scm
[INFO] Generating "Summary" report       --- maven-project-info-reports-plugin:3.0.0:summary
[INFO] 
[INFO] -----< org.entando:entando-k8s-cluster-infrastructure-controller >------
[INFO] Building Entando K8S Controller for Entando Cluster Infrastructure Deployments 0.0.0-SNAPSHOT-PR-9-1
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- sonar-maven-plugin:3.7.0.1746:sonar (default-cli) @ entando-k8s-cluster-infrastructure-controller ---
[INFO] User cache: /****/.sonar/cache
[INFO] SonarQube version: 8.0.0
[INFO] Default locale: "en", source code encoding: "UTF-8"
[INFO] Load global settings
[INFO] Load global settings (done) | time=260ms
[INFO] Server id: 1BD809FA-AWHW8ct9-T_TB3XqouNu
[INFO] User cache: /****/.sonar/cache
[INFO] Load/download plugins
[INFO] Load plugins index
[INFO] Load plugins index (done) | time=133ms
[INFO] Load/download plugins (done) | time=24511ms
[INFO] Loaded core extensions: developer-scanner
[INFO] Process project properties
[INFO] E**cute project builders
[INFO] E**cute project builders (done) | time=2ms
[INFO] Project key: entando-k8s_entando-k8s-cluster-infrastructure-controller
[INFO] Base dir: /workspace/source
[INFO] Working dir: /workspace/source/target/sonar
[INFO] Load project settings for component key: 'entando-k8s_entando-k8s-cluster-infrastructure-controller'
[INFO] Load project settings for component key: 'entando-k8s_entando-k8s-cluster-infrastructure-controller' (done) | time=142ms
[INFO] Load project branches
[INFO] Load project branches (done) | time=34ms
[INFO] Check ALM binding of project 'entando-k8s_entando-k8s-cluster-infrastructure-controller'
[INFO] Detected project binding: BOUND
[INFO] Check ALM binding of project 'entando-k8s_entando-k8s-cluster-infrastructure-controller' (done) | time=24ms
[INFO] Load project pull requests
[INFO] Load project pull requests (done) | time=34ms
[INFO] Load branch configuration
[INFO] Load branch configuration (done) | time=802ms
[INFO] Load quality profiles
[INFO] Load quality profiles (done) | time=71ms
[INFO] Load active rules
[INFO] Load active rules (done) | time=1292ms
[INFO] Organization key: entando-k8s
[INFO] Pull request 9 for merge into master from ENG-1218_configurable_resource_requirements
[INFO] SCM collecting changed files in the branch
[WARNING] Exception caught during e**cution of command '[git, config, --******, --edit]' in '/usr/local/git/bin', return code '128', error message 'fatal: Invalid path '/usr/local/git/etc': No such file or directory
'
[INFO] SCM collecting changed files in the branch (done) | time=322ms
[INFO] Indexing files...
[INFO] Project configuration:
[INFO] 7 files inde**d
[INFO] 0 files ignored because of scm ignore settings
[INFO] Quality profile for java: Sonar way
[INFO] Quality profile for xml: Sonar way
[INFO] ------------- Run sensors on module Entando K8S Controller for Entando Cluster Infrastructure Deployments
[INFO] Load metrics repository
[INFO] Load metrics repository (done) | time=39ms
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/****/.sonar/cache/a89f1943fc75b65becd9fb4ecab8d913/sonar-tsql-plugin.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] Sensor JavaSquidSensor [java]
[INFO] Configured Java source version (sonar.java.source): 8
[INFO] JavaClasspath initialization
[INFO] JavaClasspath initialization (done) | time=17ms
[INFO] JavaTestClasspath initialization
[INFO] JavaTestClasspath initialization (done) | time=4ms
[INFO] Java Main Files AST scan
[INFO] 4 source files to be analyzed
[INFO] 4/4 source files have been analyzed
[INFO] Java Main Files AST scan (done) | time=3882ms
[INFO] Java Test Files AST scan
[INFO] 2 source files to be analyzed
[INFO] 2/2 source files have been analyzed
[INFO] Java Test Files AST scan (done) | time=782ms
[INFO] Java Generated Files AST scan
[INFO] 0 source files to be analyzed
[INFO] Java Generated Files AST scan (done) | time=1ms
[INFO] 0/0 source files have been analyzed
[INFO] Sensor JavaSquidSensor [java] (done) | time=4869ms
[INFO] Sensor SonarCSS Rules [cssfamily]
[INFO] No CSS, PHP, HTML or VueJS files are found in the project. CSS analysis is skipped.
[INFO] Sensor SonarCSS Rules [cssfamily] (done) | time=6ms
[INFO] Sensor Import of Checkstyle issues [java]
[INFO] Importing /workspace/source/target/checkstyle-result.xml
[INFO] Sensor Import of Checkstyle issues [java] (done) | time=195ms
[INFO] Sensor SurefireSensor [java]
[INFO] parsing [/workspace/source/target/surefire-reports]
[INFO] Sensor SurefireSensor [java] (done) | time=46ms
[INFO] Sensor JavaXmlSensor [java]
[INFO] 1 source files to be analyzed
[INFO] Sensor JavaXmlSensor [java] (done) | time=306ms
[INFO] Sensor HTML [web]
[INFO] 1/1 source files have been analyzed
[INFO] Sensor HTML [web] (done) | time=6ms
[INFO] Sensor XML Sensor [xml]
[INFO] 1 source files to be analyzed
[INFO] Sensor XML Sensor [xml] (done) | time=234ms
[INFO] 1/1 source files have been analyzed
[INFO] Sensor JaCoCo XML Report Importer [jacoco]
[INFO] Importing 1 report(s). Turn your logs in debug mode in order to see the exhaustive list.
[INFO] Sensor JaCoCo XML Report Importer [jacoco] (done) | time=93ms
[INFO] Sensor ThymeLeaf template sensor [securityjavafrontend]
[INFO] Sensor ThymeLeaf template sensor [securityjavafrontend] (done) | time=3ms
[INFO] Sensor JavaSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/sonar/ucfg2/java
[INFO] Read 70 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/sonar/ucfg2/java
[INFO] 15:21:22.621296 Building Type propagation graph
[INFO] 15:21:22.629769 Running Tarjan on 89 nodes
[INFO] 15:21:22.632488 Tarjan found 89 components
[INFO] 15:21:22.637101 Variable type analysis: done
[INFO] 15:21:22.63804 Building Type propagation graph
[INFO] 15:21:22.641076 Running Tarjan on 89 nodes
[INFO] 15:21:22.641746 Tarjan found 89 components
[INFO] 15:21:22.642322 Variable type analysis: done
[INFO] Analyzing 34 ucfgs to detect vulnerabilities.
[INFO] All rules entrypoints : 0 Retained UCFGs : 0
[INFO] rule: S5131, entrypoints: 0
[INFO] rule: S5131 done
[INFO] rule: S3649, entrypoints: 0
[INFO] rule: S3649 done
[INFO] rule: S2076, entrypoints: 0
[INFO] rule: S2076 done
[INFO] rule: S2091, entrypoints: 0
[INFO] rule: S2091 done
[INFO] rule: S2078, entrypoints: 0
[INFO] rule: S2078 done
[INFO] rule: S2631, entrypoints: 0
[INFO] rule: S2631 done
[INFO] rule: S5135, entrypoints: 0
[INFO] rule: S5135 done
[INFO] rule: S2083, entrypoints: 0
[INFO] rule: S2083 done
[INFO] rule: S5167, entrypoints: 0
[INFO] rule: S5167 done
[INFO] rule: S5144, entrypoints: 0
[INFO] rule: S5144 done
[INFO] rule: S5145, entrypoints: 0
[INFO] rule: S5145 done
[INFO] rule: S5146, entrypoints: 0
[INFO] rule: S5146 done
[INFO] rule: S5334, entrypoints: 0
[INFO] rule: S5334 done
[INFO] Sensor JavaSecuritySensor [security] (done) | time=571ms
[INFO] Sensor CSharpSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/ucfg_cs2
[INFO] Read 0 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/ucfg_cs2
[INFO] No UCFGs have been included for analysis.
[INFO] Sensor CSharpSecuritySensor [security] (done) | time=2ms
[INFO] Sensor PhpSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/sonar/ucfg2/php
[INFO] Read 0 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/sonar/ucfg2/php
[INFO] No UCFGs have been included for analysis.
[INFO] Sensor PhpSecuritySensor [security] (done) | time=1ms
[INFO] Sensor PythonSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/sonar/ucfg2/python
[INFO] Read 0 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/sonar/ucfg2/python
[INFO] No UCFGs have been included for analysis.
[INFO] Sensor PythonSecuritySensor [security] (done) | time=1ms
[INFO] ------------- Run sensors on project
[INFO] Sensor Zero Coverage Sensor
[INFO] Sensor Zero Coverage Sensor (done) | time=1ms
[INFO] Sensor Java CPD Block Inde**r
[INFO] Sensor Java CPD Block Inde**r (done) | time=60ms
[INFO] SCM Publisher SCM provider for this project is: git
[INFO] SCM Publisher 3 source files to be analyzed
[INFO] SCM Publisher 2/3 source files have been analyzed (done) | time=212ms
[WARNING] Missing blame information for the following files:
[WARNING]   * pom.xml
[WARNING] This may lead to missing/broken features in SonarCloud
[INFO] CPD E**cutor Calculating CPD for 4 files
[INFO] CPD E**cutor CPD calculation finished (done) | time=59ms
[INFO] SCM writing changed lines
[INFO] SCM writing changed lines (done) | time=70ms
[INFO] Analysis report generated in 282ms, dir size=186 KB
[INFO] Analysis report compressed in 60ms, zip size=45 KB
[INFO] Analysis report uploaded in 130ms
[INFO] ANALYSIS SUCCESSFUL, you can find the results at: https://sonarcloud.io/dashboard?id=entando-k8s_entando-k8s-cluster-infrastructure-controller&pullRequest=9
[INFO] Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
[INFO] More about the report processing at https://sonarcloud.io/api/ce/task?id=AXRzdQhiRQVL6XLZbLOr
[INFO] Analysis total time: 16.284 s
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:39 min
[INFO] Finished at: 2020-09-09T15:21:23Z
[INFO] ------------------------------------------------------------------------
shallow cloning https://github.com/entando-k8s/devops-results.git branch gh-pages
ran git init in /tmp/jenkins-x-collect760174635
ran git add remote origin https://github.com/entando-k8s/devops-results.git in /tmp/jenkins-x-collect760174635
ran git fetch origin --depth=1 gh-pages in dir /tmp/jenkins-x-collect760174635
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/checkstyle.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/checkstyle.rss
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/maven-base.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/maven-theme.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/print.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/site.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-junit.xml
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-report.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-report.xml
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-info.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/collapsed.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/expanded.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/external.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_error_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_info_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_success_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_warning_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/logos/build-by-maven-black.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/logos/build-by-maven-white.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/logos/maven-feather.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/newwindow.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/rss.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/issue-management.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/branchfc.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/branchnc.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/branchpc.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/bundle.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/class.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/down.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/greenbar.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/group.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/method.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/package.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/prettify.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/prettify.js
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/redbar.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/report.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/report.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/session.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/sort.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/sort.js
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/source.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/up.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-sessions.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco.csv
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco.xml
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoClusterInfrastructureController.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoClusterInfrastructureController.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployable.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployable.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployableContainer.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployableContainer.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/InfrastructureDeployableBase.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/InfrastructureDeployableBase.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/licenses.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/plugins.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/project-info.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/scm.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/summary.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/surefire-report.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/checkstyle.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/checkstyle.rss
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/maven-base.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/maven-theme.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/print.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/css/site.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-junit.xml
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-report.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-report.xml
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-info.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/collapsed.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/expanded.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/external.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_error_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_info_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_success_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/icon_warning_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/logos/build-by-maven-black.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/logos/build-by-maven-white.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/logos/maven-feather.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/newwindow.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/images/rss.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/issue-management.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/branchfc.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/branchnc.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/branchpc.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/bundle.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/class.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/down.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/greenbar.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/group.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/method.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/package.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/prettify.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/prettify.js
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/redbar.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/report.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/report.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/session.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/sort.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/sort.js
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/source.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-resources/up.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco-sessions.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco.csv
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/jacoco.xml
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoClusterInfrastructureController.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoClusterInfrastructureController.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployable.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployable.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployableContainer.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/EntandoK8SServiceDeployableContainer.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/InfrastructureDeployableBase.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/InfrastructureDeployableBase.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/jacoco/org.entando.kubernetes.controller.clusterinfrastructure/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/licenses.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/plugins.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/project-info.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/scm.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/summary.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-k8s-cluster-infrastructure-controller/PR-9/surefire-report.html
error: etcdserver: request is too large
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
{
  "url": "https://api.github.com/repos/entando-k8s/entando-k8s-cluster-infrastructure-controller/statuses/f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 10715388918,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMDcxNTM4ODkxOA==",
  "state": "success",
  "description": "Pre-deployment tests success!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-k8s-cluster-infrastructure-controller/PR-9/surefire-report.html",
  "context": "Pre-deployment tests",
  "created_at": "2020-09-09T15:23:29Z",
  "updated_at": "2020-09-09T15:23:29Z",
  "creator": {
    "login": "entando-**",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/entando-**",
    "html_url": "https://github.com/entando-**",
    "followers_url": "https://api.github.com/users/**********/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/entando-**/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/entando-**/subscriptions",
    "organizations_url": "https://api.github.com/users/entando-**/orgs",
    "repos_url": "https://api.github.com/users/entando-**/repos",
    "events_url": "https://api.github.com/users/**********/events{/privacy}",
    "received_events_url": "https://api.github.com/users/**********/received_events",
    "type": "User",
    "site_*****": false
  }
}
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 12  1922    0     0  100   236      0    306 --:--:-- --:--:-- --:--:--   306100  1922  100  1686  100   236   2184    305 --:--:-- --:--:-- --:--:--  2183
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
{
  "url": "https://api.github.com/repos/entando-k8s/entando-k8s-cluster-infrastructure-controller/statuses/f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 10715389095,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMDcxNTM4OTA5NQ==",
  "state": "success",
  "description": "Checkstyle success!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-k8s-cluster-infrastructure-controller/PR-9/checkstyle.html",
  "context": "Checkstyle",
  "created_at": "2020-09-09T15:23:30Z",
  "updated_at": "2020-09-09T15:23:30Z",
  "creator": {
    "login": "entando-**",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/entando-**",
    "html_url": "https://github.com/entando-**",
    "followers_url": "https://api.github.com/users/entando-**/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/entando-**/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/entando-**/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/entando-**/subscriptions",
    "organizations_url": "https://api.github.com/users/**********/orgs",
    "repos_url": "https://api.github.com/users/**********/repos",
    "events_url": "https://api.github.com/users/**********/events{/privacy}",
    "received_events_url": "https://api.github.com/users/entando-**/received_events",
    "type": "User",
    "site_*****": false
  }
}
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  1872  100  1661  100   211   2747    348 --:--:-- --:--:-- --:--:--  2750
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
{
  "url": "https://api.github.com/repos/entando-k8s/entando-k8s-cluster-infrastructure-controller/statuses/f5da7a2010aa2dea9f7c5647b459b0c6883b7bf8",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 10715389249,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMDcxNTM4OTI0OQ==",
  "state": "success",
  "description": "OWASP CVE success!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-k8s-cluster-infrastructure-controller/PR-9/dependency-check-report.html",
  "context": "OWASP CVE",
  "created_at": "2020-09-09T15:23:30Z",
  "updated_at": "2020-09-09T15:23:30Z",
  "creator": {
    "login": "entando-**",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/entando-**",
    "html_url": "https://github.com/entando-**",
    "followers_url": "https://api.github.com/users/entando-**/followers",
    "following_url": "https://api.github.com/users/entando-**/following{/other_user}",
    "gists_url": "https://api.github.com/users/entando-**/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/entando-**/subscriptions",
    "organizations_url": "https://api.github.com/users/entando-**/orgs",
    "repos_url": "https://api.github.com/users/entando-**/repos",
    "events_url": "https://api.github.com/users/entando-**/events{/privacy}",
    "received_events_url": "https://api.github.com/users/entando-**/received_events",
    "type": "User",
    "site_*****": false
  }
}
Congratulations! No build failures found for entando-k8s-cluster-infrastructure-controller-PR-9.
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  1894  100  1672  100   222   2427    322 --:--:-- --:--:-- --:--:--  2426

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-container-build[0m
Generating tags...
 - entando/entando-k8s-cluster-infrastructure-controller -> docker.io/entando/entando-k8s-cluster-infrastructure-controller:0.0.0-SNAPSHOT-PR-9-1
Checking cache...
 - entando/entando-k8s-cluster-infrastructure-controller: Not found. Building
Building [entando/entando-k8s-cluster-infrastructure-controller]...
Sending build context to Docker daemon  540.2kBSending build context to Docker daemon  1.086MBSending build context to Docker daemon  5.475MBSending build context to Docker daemon  6.548MBSending build context to Docker daemon  7.663MBSending build context to Docker daemon  10.45MBSending build context to Docker daemon  13.16MBSending build context to Docker daemon   16.5MBSending build context to Docker daemon  18.73MBSending build context to Docker daemon  23.18MBSending build context to Docker daemon  25.97MBSending build context to Docker daemon  27.06MBSending build context to Docker daemon  29.82MBSending build context to Docker daemon  35.32MBSending build context to Docker daemon  36.42MBSending build context to Docker daemon  38.04MBSending build context to Docker daemon     40MB
Step 1/6 : FROM fabric8/java-alpine-openjdk8-jre
 ---> 6383f0513235
Step 2/6 : ENV JAVA_OPTIONS "-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
 ---> Using cache
 ---> 781f0699f0f0
Step 3/6 : ENV AB_ENABLED jmx_exporter
 ---> Using cache
 ---> 3d03a75b86f8
Step 4/6 : COPY target/lib/* /deployments/lib/
 ---> Using cache
 ---> 779df4054b56
Step 5/6 : COPY target/*-runner.jar /deployments/app.jar
 ---> f27bd9a5fd90
Step 6/6 : ENTRYPOINT /deployments/run-java.sh
 ---> Running in 947216e56299
 ---> 23acd9063eff
Successfully built 23acd9063eff
The push refers to a repository [docker.io/entando/entando-k8s-cluster-infrastructure-controller]
aed17e838805: Preparing
f18915d080eb: Preparing
a37d6baa8a5e: Preparing
4246c252be29: Preparing
bbc6d89e45a1: Preparing
6a8968c88953: Preparing
c11f0dd7f64f: Preparing
081a861c7ecd: Preparing
df5b415aa3df: Preparing
77cae8ab23bf: Preparing
6a8968c88953: Waiting
df5b415aa3df: Waiting
c11f0dd7f64f: Waiting
081a861c7ecd: Waiting
77cae8ab23bf: Waiting
a37d6baa8a5e: Layer already exists
bbc6d89e45a1: Layer already exists
4246c252be29: Layer already exists
6a8968c88953: Layer already exists
081a861c7ecd: Layer already exists
c11f0dd7f64f: Layer already exists
f18915d080eb: Mounted from entando/entando-k8s-keycloak-controller
df5b415aa3df: Layer already exists
77cae8ab23bf: Layer already exists
aed17e838805: Pushed
0.0.0-SNAPSHOT-PR-9-1: digest: sha256:9426582d3ab791b4e3c827dfcf3d48ad19d84f0cdd86c5bb2f89ae7f9d6abdad size: 2410
There is a new version (1.14.0) of Skaffold available. Download it at https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64


Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-postbuild-post-build[0m
no CVE provider running in the current ** namespace so skip adding image to be analysed

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-promote-make-preview[0m
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-9-1/" Chart.yaml
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-9-1/" ../*/Chart.yaml
sed -i -e "s|repository:.*|repository: docker.io\/entando\/entando-k8s-cluster-infrastructure-controller|" values.yaml
sed -i -e "s/tag:.*/tag: 0.0.0-SNAPSHOT-PR-9-1/" values.yaml
echo "  version: 0.0.0-SNAPSHOT-PR-9-1" >> requirements.yaml
** step helm build
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: storage.googleapis.com https://storage.googleapis.com/chartmuseum.jenkins-x.io
Successfully added Helm repository storage.googleapis.com.
Adding missing Helm repo: jenkins-x-chartmuseum http://jenkins-x-chartmuseum:8080
Successfully added Helm repository jenkins-x-chartmuseum.
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080

Showing logs for build [32mentando-k8s-entando-k8s-cluster-xp5vk-1[0m stage [32mfrom-build-pack[0m and container [32mstep-promote-jx-preview[0m
Creating a preview
Error doing update to environments.jenkins.io Timeout: request did not complete within allowed duration
{jenkins.io v1 {environments environment [env] Environment EnvironmentList []} Namespaced &CustomResourceValidation{OpenAPIV3Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Environment represents an environment like Dev, Test, Staging, Production where code lives,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},kind: {  <nil> Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},metadata: {  <nil> ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[annotations:{  <nil> Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} clusterName:{  <nil> The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} creationTimestamp:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} deletionGracePeriodSeconds:{  <nil> Number of seconds allowed for this object to gracefully terminate before it will be removed from the ******. Only set when deletionTimestamp is also set. May only be shortened. Read-only. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} deletionTimestamp:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} finalizers:{  <nil> Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If 
the deletionTimestamp of the object is non-nil, entries in this list can only be removed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} generateName:{  <nil> GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} generation:{  <nil> A sequence number representing a specific generation of the desired state. Populated by the ******. Read-only. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} labels:{  <nil> Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} managedFields:{  <nil> ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},fieldsType: {  <nil> FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1" string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},fieldsV1: {  <nil> FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

The exact format is defined in sigs.k8s.io/structured-merge-diff object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},manager: {  <nil> Manager is an identifier of the workflow managing these fields. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operation: {  <nil> Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},time: {  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} namespace:{  <nil> Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} ownerReferences:{  <nil> List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[apiVersion kind name uid],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> API version of the referent. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},blockOwnerDeletion: {  <nil> If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},controller: {  <nil> If true, this reference points to the managing controller. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},kind: {  <nil> Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},uid: {  <nil> UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resourceVersion:{  <nil> An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

Populated by the ******. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} selfLink:{  <nil> SelfLink is a URL representing this object. Populated by the ******. Read-only.

DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} uid:{  <nil> UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

Populated by the ******. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},spec: {  <nil> EnvironmentSpec is the specification of an Environment object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cluster:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} kind:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} label:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} namespace:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} order:{  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} previewGitInfo:{  <nil> PreviewGitSpec is the preview git branch/pull request details object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[appName:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} applicationURL:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} buildStatus:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} buildStatusUrl:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} description:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} title:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} url:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> UserSpec is the user details object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[imageUrl:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} linkUrl:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} username:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil m
ap[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} promotionStrategy:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} pullRequestURL:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} remoteCluster:{  <nil> RemoteCluster flag indicates if the Environment is deployed in a separate cluster to the Development Environment boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} source:{  <nil> EnvironmentRepository is the repository for an environment using GitOps object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[kind:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} ref:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} url:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} teamSettings:{  <nil> TeamSettings the default settings for a team object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[appPrefi**s:{  <nil> AppsPrefi**s is the list of prefi**s for appNames array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} appsRepository:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} askOnCreate:{  <nil>  boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} bootRequirements:{  <nil> BootRequirements is a marshaled string of the **-requirements.yml used in the most recent run for this cluster string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} branchPatterns:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} buildPackName:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} buildPackRef:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil ma
p[] nil map[] map[] nil map[] nil nil false <nil> false false} buildPackUrl:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} defaultScheduler:{  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [kind name] nil [] [] [] nil map[apiVersion:{  <nil> API version of the referent. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} kind:{  <nil> Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} uid:{  <nil> UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} deployKind:{  <nil> DeployKind what kind of deployment ("default" uses regular Kubernetes Services and Deployments, "knative" uses the Knative Service resource instead) string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} deployOptions:{  <nil> DeployOptions configures options for how to deploy applications by default such as using progressive delivery or using horizontal pod autoscaler object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[canary:{  <nil> Canary should we enable canary rollouts (progressive delivery) for apps by default boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} hpa:{  <nil> should we use the horizontal pod autoscaler on new apps by default? boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} dockerRegistryOrg:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} envOrganisation:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} forkBranchPatterns:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} gitPublic:{  <nil>  boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} gitServer:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} helmBinary:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} helmTemplate:{  <nil>  boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map
[] nil map[] nil nil false <nil> false false} importMode:{  <nil> ImportMode indicates what kind of string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} kubeProvider:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} noTiller:{  <nil>  boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} organisation:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} pipelineUserEmail:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} pipelineUsername:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} postPreviewJobs:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Job represents the configuration of a single job.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},kind: {  <nil> Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},metadata: {  <nil> ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[annotations:{  <nil> Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} clusterName:{  <nil> The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} creationTimestamp:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.
  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} deletionGracePeriodSeconds:{  <nil> Number of seconds allowed for this object to gracefully terminate before it will be removed from the ******. Only set when deletionTimestamp is also set. May only be shortened. Read-only. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} deletionTimestamp:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} finalizers:{  <nil> Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} generateName:{  <nil> GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} generation:{  <nil> A sequence number representing a specific generation of the desired state. Populated by the ******. Read-only. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} labels:{  <nil> Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} managedFields:{  <nil> ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},fieldsType: {  <nil> FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1" string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},fieldsV1: {  <nil> FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

The exact format is defined in sigs.k8s.io/structured-merge-diff object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},manager: {  <nil> Manager is an identifier of the workflow managing these fields. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operation: {  <nil> Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},time: {  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} namespace:{  <nil> Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} ownerReferences:{  <nil> List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[apiVersion kind name uid],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> API version of the referent. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},blockOwnerDeletion: {  <nil> If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},controller: {  <nil> If true, this reference points to the managing controller. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},kind: {  <nil> Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},uid: {  <nil> UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resourceVersion:{  <nil> An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

Populated by the ******. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} selfLink:{  <nil> SelfLink is a URL representing this object. Populated by the ******. Read-only.

DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} uid:{  <nil> UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

Populated by the ******. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},spec: {  <nil> JobSpec describes how the job e**cution will look like. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [template] nil [] [] [] nil map[activeDeadlineSeconds:{  <nil> Specifies the duration in seconds relative to the startTime that the job may be active before the ****** tries to terminate it; value must be positive integer integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} backoffLimit:{  <nil> Specifies the number of retries before marking this job failed. Defaults to 6 integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} completions:{  <nil> Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} manualSelector:{  <nil> manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the ****** pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} parallelism:{  <nil> Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} selector:{  <nil> A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[matchExpressions:{  <nil> matchExpressions is a list of label selector requirements. The requirements are ANDed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum
:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> key is the label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} matchLabels:{  <nil> matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} template:{  <nil> PodTemplateSpec describes the data a pod should have when created from a template object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[metadata:{  <nil> ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[annotations:{  <nil> Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} clusterName:{  <nil> The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request. string   nil <nil> false <nil> false <nil> <nil>  <nil> 
<nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} creationTimestamp:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} deletionGracePeriodSeconds:{  <nil> Number of seconds allowed for this object to gracefully terminate before it will be removed from the ******. Only set when deletionTimestamp is also set. May only be shortened. Read-only. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} deletionTimestamp:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} finalizers:{  <nil> Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} generateName:{  <nil> GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} generation:{  <nil> A sequence number representing a specific generation of the desired state. Populated by the ******. Read-only. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} labels:{  <nil> Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} managedFields:{  <nil> ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},fieldsType: {  <nil> FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1" string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},fieldsV1: {  <nil> FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

The exact format is defined in sigs.k8s.io/structured-merge-diff object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},manager: {  <nil> Manager is an identifier of the workflow managing these fields. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operation: {  <nil> Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},time: {  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} namespace:{  <nil> Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} ownerReferences:{  <nil> List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[apiVersion kind name uid],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{apiVersion: {  <nil> API version of the referent. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},blockOwnerDeletion: {  <nil> If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},controller: {  <nil> If true, this reference points to the managing controller. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},kind: {  <nil> Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},uid: {  <nil> UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resourceVersion:{  <nil> An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

Populated by the ******. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} selfLink:{  <nil> SelfLink is a URL representing this object. Populated by the ******. Read-only.

DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} uid:{  <nil> UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

Populated by the ******. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} spec:{  <nil> PodSpec is a description of a pod. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [containers] nil [] [] [] nil map[activeDeadlineSeconds:{  <nil> Optional duration in seconds the pod may be active on the node relative to StartTime before the ****** will actively try to mark it failed and kill associated containers. Value must be a positive integer. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} affinity:{  <nil> Affinity is a group of affinity scheduling rules. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[nodeAffinity:{  <nil> Node affinity is a group of node affinity scheduling rules. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[preferredDuringSchedulingIgnoredDuringE**cution:{  <nil> The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[weight preference],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{preference: {  <nil> A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[matchExpressions:{  <nil> A list of node selector requirements by node's labels. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. string   nil <nil> false <nil>
 false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} matchFields:{  <nil> A list of node selector requirements by node's fields. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:ni
l,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},weight: {  <nil> Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} requiredDuringSchedulingIgnoredDuringE**cution:{  <nil> A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [nodeSelectorTerms] nil [] [] [] nil map[nodeSelectorTerms:{  <nil> Required. A list of node selector terms. The terms are ORed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{matchExpressions: {  <nil> A list of node selector requirements by node's labels. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. array   nil <nil> false <
nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},matchFields: {  <nil> A list of node selector requirements by node's fields. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[]
 map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} podAffinity:{  <nil> Pod affinity is a group of inter pod affinity scheduling rules. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[preferredDuringSchedulingIgnoredDuringE**cution:{  <nil> The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s),Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[weight podAffinityTerm],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{podAffinityTerm: {  <nil> Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [topologyKey] nil [] [] [] nil map[labelSelector:{  <nil> A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[matchExpressions:{  <nil> matchExpressions is a list of label selector requirements. The requirements are ANDed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> key is the label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. string   nil <nil> false <nil> false 
<nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} matchLabels:{  <nil> matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} namespaces:{  <nil> namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace" array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} topologyKey:{  <nil> This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},weight: {  <nil> weight associated with matching the corresponding podAffinityTerm, in the range 1-100. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> fa
lse false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} requiredDuringSchedulingIgnoredDuringE**cution:{  <nil> If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod e**cution (e.g. due to a pod label update), the ****** may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[topologyKey],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{labelSelector: {  <nil> A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[matchExpressions:{  <nil> matchExpressions is a list of label selector requirements. The requirements are ANDed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> key is the label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],M
axProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} matchLabels:{  <nil> matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},namespaces: {  <nil> namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace" array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},topologyKey: {  <nil> This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} podAntiAffinity:{  <nil> Pod anti affinity is a group of inter pod anti affinity scheduling rules. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[preferredDuringSchedulingIgnoredDuringE**cution:{  <nil> The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity express
ions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s),Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[weight podAffinityTerm],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{podAffinityTerm: {  <nil> Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [topologyKey] nil [] [] [] nil map[labelSelector:{  <nil> A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[matchExpressions:{  <nil> matchExpressions is a list of label selector requirements. The requirements are ANDed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> key is the label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSO
NSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} matchLabels:{  <nil> matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} namespaces:{  <nil> namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace" array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} topologyKey:{  <nil> This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},weight: {  <nil> weight associated with matching the corresponding podAffinityTerm, in the range 1-100. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} requiredDuringSchedulingIgnoredDuringE**cution:{  <nil> If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod e**cution (e.g. due to a pod label update), the ****** may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Defines a set of pods (namely those matching the labelSelector relative to the giv
en namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[topologyKey],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{labelSelector: {  <nil> A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[matchExpressions:{  <nil> matchExpressions is a list of label selector requirements. The requirements are ANDed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> key is the label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} matchLabels:{  <nil> matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed. object   nil <nil
> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},namespaces: {  <nil> namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace" array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},topologyKey: {  <nil> This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} automountServiceAccountToken:{  <nil> AutomountServiceAccountToken indicates whether a service account token should be automatically mounted. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} containers:{  <nil> List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A single application container that you want to run within a pod.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{args: {  <nil> Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSO
NSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},command: {  <nil> Entrypoint array. Not e**cuted within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},env: {  <nil> List of environment variables to set in the container. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:EnvVar represents an environment variable present in a Container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> Name of the environment variable. Must be a C_IDENTIFIER. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},valueFrom: {  <nil> EnvVarSource represents a source for the value of an EnvVar. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[configMapKeyRef:{  <nil> Selects a key from a ConfigMap. object   nil <nil> false <nil> false <
nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [key] nil [] [] [] nil map[key:{  <nil> The key to select. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the ConfigMap or its key must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} fieldRef:{  <nil> ObjectFieldSelector selects an APIVersioned field of an object. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [fieldPath] nil [] [] [] nil map[apiVersion:{  <nil> Version of the schema the FieldPath is written in terms of, defaults to "v1". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fieldPath:{  <nil> Path of the field to select in the specified API version. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} resourceFieldRef:{  <nil> ResourceFieldSelector represents container resources (cpu, memory) and their output format object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [resource] nil [] [] [] nil map[containerName:{  <nil> Container name: required for volumes, optional for env vars string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} divisor:{  <nil> Quantity is a fi**d-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.*** will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this e**rcise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fi**d point implementation. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resource:{  <nil> Required: resource to select string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} secretKeyRef:{  <nil> SecretKeySelector selects a key of a Secret. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [key] nil [] [] [] nil map[key:{  <nil> The key of the secret to select from.  Must be a valid secret key. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret or its key must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},envFrom: {  <nil> List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:EnvFromSource represents the source of a set of ConfigMaps,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{configMapRef: {  <nil> ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the ConfigMap must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},prefix: {  <nil> An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},secretRef: {  <nil> SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},image: {  <nil> Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},imagePullPolicy: {  <nil> Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},lifecycle: {  <nil> Lifecycle describes actions that the management ****** should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[postStart:{  <nil> Handler defines a specific action that should be taken object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] []
 nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} preStop:{  <n
il> Handler defines a specific action that should be taken object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you 
to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},livenessProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. stri
ng   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil
 false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},ports: {  <nil> List of ports to expose from the container. Exposing a port here gives the ****** additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:ContainerPort represents a network port in a single container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[containerPort],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil> Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},hostIP: {  <nil> What host IP to bind the external port to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},hostPort: {  <nil> Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},protocol: {  <nil> Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbe
ddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},readinessProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknow
nFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},resources: {  <nil> ResourceRequirements describes the compute resource requirements. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[limits:{  <nil> Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/ object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] 
nil nil false <nil> false false} requests:{  <nil> Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/ object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},securityContext: {  <nil> SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[allowPrivilegeEscalation:{  <nil> AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} capabilities:{  <nil> Adds and removes POSIX capabilities from running containers. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[add:{  <nil> Added capabilities array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} drop:{  <nil> Removed capabilities array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} privileged:{  <nil> Run container in privileged mode. Processes in privileged containers are essentially equivalent to **** on the host. Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} procMount:{  <nil> procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked pa
ths. This requires the ProcMountType feature flag to be enabled. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnlyRootFile******:{  <nil> Whether this container has a read-only **** file******. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsGroup:{  <nil> The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsNonRoot:{  <nil> Indicates that the container must run as a non-**** user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (****) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUser:{  <nil> The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} seLinuxOptions:{  <nil> SELinuxOptions are the labels to be applied to the container object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[level:{  <nil> Level is SELinux level label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} role:{  <nil> Role is a SELinux role label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} type:{  <nil> Type is a SELinux type label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> User is a SELinux user label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} windowsOptions:{  <nil> WindowsSecurityContextOptions contain Windows-specific options and credentials. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[gmsaCredentialSpec:{  <nil> GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} gmsaCredentialSpecName:{  <nil> GMSACredentialSpecName is the name of the GMSA credential sp
ec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUserName:{  <nil> The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},startupProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Patte
rn:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum v
alue is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},stdin: {  <nil> Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},stdinOnce: {  <nil> Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},terminationMessagePath: {  <nil> Optional: Path at which the file to which the container's termination message will be written is mounted into the container's file******. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},terminationMessagePolicy: {  <nil> Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},tty: {  <nil> Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},volumeDevices: {  <nil> volumeDevices is the list of block devices to be used by the container. This is a beta feature. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:volumeDevice describes a mapping of a raw block device within a container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name devicePath],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{devicePath: {  <nil> devicePath is the path inside of the container that the device will be mapped to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> name must match the name
 of a persistentVolumeClaim in the pod string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},volumeMounts: {  <nil> Pod volumes to mount into the container's file******. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:VolumeMount describes a mounting of a Volume within a container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name mountPath],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{mountPath: {  <nil> Path within the container at which the volume should be mounted.  Must not contain ':'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},mountPropagation: {  <nil> mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> This must match the Name of a Volume. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},readOnly: {  <nil> Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},subPath: {  <nil> Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's ****). string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},subPathExpr: {  <nil> Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's ****). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},workingDir: {  <nil> Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:J
SONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} dnsConfig:{  <nil> PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[nameservers:{  <nil> A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} options:{  <nil> A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:PodDNSConfigOption defines DNS resolver options of a pod.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> Required. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} searches:{  <nil> A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnk
nownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} dnsPolicy:{  <nil> Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} enableServiceLinks:{  <nil> EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} ephemeralContainers:{  <nil> List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{args: {  <nil> Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nulla
ble:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},command: {  <nil> Entrypoint array. Not e**cuted within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},env: {  <nil> List of environment variables to set in the container. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:EnvVar represents an environment variable present in a Container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> Name of the environment variable. Must be a C_IDENTIFIER. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},valueFrom: {  <nil> EnvVarSource represents a source for the value of an EnvVar. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[configMapKeyRef:{  <nil> Selects a key from a ConfigMap. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [key] nil [] [] [] nil map[key:{  <nil> The key to select. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional
:{  <nil> Specify whether the ConfigMap or its key must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} fieldRef:{  <nil> ObjectFieldSelector selects an APIVersioned field of an object. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [fieldPath] nil [] [] [] nil map[apiVersion:{  <nil> Version of the schema the FieldPath is written in terms of, defaults to "v1". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fieldPath:{  <nil> Path of the field to select in the specified API version. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} resourceFieldRef:{  <nil> ResourceFieldSelector represents container resources (cpu, memory) and their output format object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [resource] nil [] [] [] nil map[containerName:{  <nil> Container name: required for volumes, optional for env vars string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} divisor:{  <nil> Quantity is a fi**d-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.*** will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this e**rcise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fi**d point implementation. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resource:{  <nil> Required: resource to select string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} secretKeyRef:{  <nil> SecretKeySelector selects a key of a Secret. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [key] nil [] [] [] nil map[key:{  <nil> The key of the secret to select from.  Must be a valid secret key. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret or its key must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},envFrom: {  <nil> List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:EnvFromSource represents the source of a set of ConfigMaps,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{configMapRef: {  <nil> ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the ConfigMap must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},prefix: {  <nil> An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},secretRef: {  <nil> SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},image: {  <nil> Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},imagePullPolicy: {  <nil> Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},lifecycle: {  <nil> Lifecycle describes actions that the management ****** should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[postStart:{  <nil> Handler defines a specific action that should be taken object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction d
escribes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} preStop:{  <nil> Handler defines a specific action that should be taken object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [
] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <ni
l> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},livenessProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false
 false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it pro
duces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},ports: {  <nil> Ports are not allowed for ephemeral containers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:ContainerPort represents a network port in a single container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[containerPort],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil> Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},hostIP: {  <nil> What host IP to bind the external port to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},hostPort: {  <nil> Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},protocol: {  <nil> Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},readinessProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false
 <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and 
unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},resources: {  <nil> ResourceRequirements describes the compute resource requirements. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[limits:{  <nil> Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/ object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} requests:{  <nil> Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/ object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] n
il map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},securityContext: {  <nil> SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[allowPrivilegeEscalation:{  <nil> AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} capabilities:{  <nil> Adds and removes POSIX capabilities from running containers. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[add:{  <nil> Added capabilities array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} drop:{  <nil> Removed capabilities array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} privileged:{  <nil> Run container in privileged mode. Processes in privileged containers are essentially equivalent to **** on the host. Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} procMount:{  <nil> procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnlyRootFile******:{  <nil> Whether this container has a read-only **** file******. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil
 nil false <nil> false false} runAsGroup:{  <nil> The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsNonRoot:{  <nil> Indicates that the container must run as a non-**** user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (****) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUser:{  <nil> The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} seLinuxOptions:{  <nil> SELinuxOptions are the labels to be applied to the container object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[level:{  <nil> Level is SELinux level label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} role:{  <nil> Role is a SELinux role label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} type:{  <nil> Type is a SELinux type label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> User is a SELinux user label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} windowsOptions:{  <nil> WindowsSecurityContextOptions contain Windows-specific options and credentials. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[gmsaCredentialSpec:{  <nil> GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} gmsaCredentialSpecName:{  <nil> GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUserName:{  <nil> The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set 
in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},startupProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <ni
l> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},stdin: {  <nil> Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the co
ntainer will always result in EOF. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},stdinOnce: {  <nil> Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},targetContainerName: {  <nil> If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},terminationMessagePath: {  <nil> Optional: Path at which the file to which the container's termination message will be written is mounted into the container's file******. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},terminationMessagePolicy: {  <nil> Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},tty: {  <nil> Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},volumeDevices: {  <nil> volumeDevices is the list of block devices to be used by the container. This is a beta feature. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:volumeDevice describes a mapping of a raw block device within a container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name devicePath],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{devicePath: {  <nil> devicePath is the path inside of the container that the device will be mapped to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false fals
e},name: {  <nil> name must match the name of a persistentVolumeClaim in the pod string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},volumeMounts: {  <nil> Pod volumes to mount into the container's file******. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:VolumeMount describes a mounting of a Volume within a container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name mountPath],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{mountPath: {  <nil> Path within the container at which the volume should be mounted.  Must not contain ':'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},mountPropagation: {  <nil> mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> This must match the Name of a Volume. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},readOnly: {  <nil> Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},subPath: {  <nil> Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's ****). string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},subPathExpr: {  <nil> Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's ****). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},workingDir: {  <nil> Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:m
ap[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} hostAliases:{  <nil> HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{hostnames: {  <nil> Hostnames for the above IP address. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},ip: {  <nil> IP address of the host file entry. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} hostIPC:{  <nil> Use the host's ipc namespace. Optional: Default to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} hostNetwork:{  <nil> Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} hostPID:{  <nil> Use the host's pid namespace. Optional: Default to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} hostname:{  <nil> Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a ******-defined value. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} imagePullSecrets:{  <nil> ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementation
s for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} initContainers:{  <nil> List of initialization containers belonging to the pod. Init containers are e**cuted in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A single application container that you want to run within a pod.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{args: {  <nil> Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},Add
itionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},command: {  <nil> Entrypoint array. Not e**cuted within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},env: {  <nil> List of environment variables to set in the container. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:EnvVar represents an environment variable present in a Container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> Name of the environment variable. Must be a C_IDENTIFIER. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},valueFrom: {  <nil> EnvVarSource represents a source for the value of an EnvVar. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[configMapKeyRef:{  <nil> Selects a key from a ConfigMap. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [key] nil [] [] [] nil map[key:{  <nil> The key to select. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-object
s/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the ConfigMap or its key must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} fieldRef:{  <nil> ObjectFieldSelector selects an APIVersioned field of an object. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [fieldPath] nil [] [] [] nil map[apiVersion:{  <nil> Version of the schema the FieldPath is written in terms of, defaults to "v1". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fieldPath:{  <nil> Path of the field to select in the specified API version. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} resourceFieldRef:{  <nil> ResourceFieldSelector represents container resources (cpu, memory) and their output format object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [resource] nil [] [] [] nil map[containerName:{  <nil> Container name: required for volumes, optional for env vars string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} divisor:{  <nil> Quantity is a fi**d-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.*** will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this e**rcise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fi**d point implementation. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resource:{  <nil> Required: resource to select string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} secretKeyRef:{  <nil> SecretKeySelector selects a key of a Secret. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [key] nil [] [] [] nil map[key:{  <nil> The key of the secret to select from.  Must be a valid secret key. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret or its key must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},envFrom: {  <nil> List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:EnvFromSource represents the source of a set of ConfigMaps,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{configMapRef: {  <nil> ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the ConfigMap must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},prefix: {  <nil> An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},secretRef: {  <nil> SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},image: {  <nil> Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},imagePullPolicy: {  <nil> Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},lifecycle: {  <nil> Lifecycle describes actions that the management ****** should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[postStart:{  <nil> Handler defines a specific action that should be taken object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] []
 nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} preStop:{  <n
il> Handler defines a specific action that should be taken object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you 
to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},livenessProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. stri
ng   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil
 false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},ports: {  <nil> List of ports to expose from the container. Exposing a port here gives the ****** additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:ContainerPort represents a network port in a single container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[containerPort],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil> Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},hostIP: {  <nil> What host IP to bind the external port to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},hostPort: {  <nil> Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},protocol: {  <nil> Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbe
ddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},readinessProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknow
nFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},resources: {  <nil> ResourceRequirements describes the compute resource requirements. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[limits:{  <nil> Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/ object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] 
nil nil false <nil> false false} requests:{  <nil> Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/ object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},securityContext: {  <nil> SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[allowPrivilegeEscalation:{  <nil> AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} capabilities:{  <nil> Adds and removes POSIX capabilities from running containers. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[add:{  <nil> Added capabilities array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} drop:{  <nil> Removed capabilities array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} privileged:{  <nil> Run container in privileged mode. Processes in privileged containers are essentially equivalent to **** on the host. Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} procMount:{  <nil> procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked pa
ths. This requires the ProcMountType feature flag to be enabled. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnlyRootFile******:{  <nil> Whether this container has a read-only **** file******. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsGroup:{  <nil> The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsNonRoot:{  <nil> Indicates that the container must run as a non-**** user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (****) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUser:{  <nil> The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} seLinuxOptions:{  <nil> SELinuxOptions are the labels to be applied to the container object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[level:{  <nil> Level is SELinux level label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} role:{  <nil> Role is a SELinux role label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} type:{  <nil> Type is a SELinux type label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> User is a SELinux user label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} windowsOptions:{  <nil> WindowsSecurityContextOptions contain Windows-specific options and credentials. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[gmsaCredentialSpec:{  <nil> GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} gmsaCredentialSpecName:{  <nil> GMSACredentialSpecName is the name of the GMSA credential sp
ec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUserName:{  <nil> The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},startupProbe: {  <nil> Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[e**c:{  <nil> E**cAction describes a "run in container" action. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[command:{  <nil> Command is the command line to e**cute inside the container, the working directory for the command  is **** ('/') in the container's file******. The command is simply e**c'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} failureThreshold:{  <nil> Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpGet:{  <nil> HTTPGetAction describes an action based on HTTP Get requests. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} httpHeaders:{  <nil> Custom headers to set in the request. HTTP allows repeated headers. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:HTTPHeader describes a custom header to be used in HTTP probes,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Patte
rn:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> The header field name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> The header field value string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path to access on the HTTP server. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} scheme:{  <nil> Scheme to use for connecting to the host. Defaults to HTTP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} initialDelaySeconds:{  <nil> Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} periodSeconds:{  <nil> How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} successThreshold:{  <nil> Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tcpSocket:{  <nil> TCPSocketAction describes an action based on opening a socket object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [port] nil [] [] [] nil map[host:{  <nil> Optional: Host name to connect to, defaults to the pod IP. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} port:{  <nil> IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number. string int-or-string  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} timeoutSeconds:{  <nil> Number of seconds after which the probe times out. Defaults to 1 second. Minimum v
alue is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},stdin: {  <nil> Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},stdinOnce: {  <nil> Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},terminationMessagePath: {  <nil> Optional: Path at which the file to which the container's termination message will be written is mounted into the container's file******. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},terminationMessagePolicy: {  <nil> Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},tty: {  <nil> Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},volumeDevices: {  <nil> volumeDevices is the list of block devices to be used by the container. This is a beta feature. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:volumeDevice describes a mapping of a raw block device within a container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name devicePath],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{devicePath: {  <nil> devicePath is the path inside of the container that the device will be mapped to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> name must match the name
 of a persistentVolumeClaim in the pod string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},volumeMounts: {  <nil> Pod volumes to mount into the container's file******. Cannot be updated. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:VolumeMount describes a mounting of a Volume within a container.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name mountPath],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{mountPath: {  <nil> Path within the container at which the volume should be mounted.  Must not contain ':'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},mountPropagation: {  <nil> mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> This must match the Name of a Volume. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},readOnly: {  <nil> Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},subPath: {  <nil> Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's ****). string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},subPathExpr: {  <nil> Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's ****). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},workingDir: {  <nil> Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:J
SONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} nodeName:{  <nil> NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} nodeSelector:{  <nil> NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} overhead:{  <nil> Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.16, and is only honored by servers that enable the PodOverhead feature. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} preemptionPolicy:{  <nil> PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} priority:{  <nil> The priority value. Various ****** components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} priorityClassName:{  <nil> If specified, indicates the pod's priority. "******-node-critical" and "******-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readinessGates:{  <nil> If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:PodReadine
ssGate contains the reference to a pod condition,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[conditionType],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{conditionType: {  <nil> ConditionType refers to a condition in the pod's condition list with matching type. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} restartPolicy:{  <nil> Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runtimeClassName:{  <nil> RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} schedulerName:{  <nil> If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} securityContext:{  <nil> PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[fsGroup:{  <nil> A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsGroup:{  <nil> The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsNonRoot:{  <nil> Indicates that the container must run as a non-**** user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (****) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUser:{  <nil> The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} seLinuxOptions:{  <nil> SELinuxOptions are the labels to be applied to the container object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[level:{  <nil> Level is SELinux level label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} role:{  <nil> Role is a SELinux role label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} type:{  <nil> Type is a SELinux type label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> User is a SELinux user label that applies to the container. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} supplementalGroups:{  <nil> A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:integer,Format:int64,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil
 map[] nil map[] map[] nil map[] nil nil false <nil> false false} sysctls:{  <nil> Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Sysctl defines a kernel parameter to be set,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name value],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{name: {  <nil> Name of a property to set string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},value: {  <nil> Value of a property to set string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} windowsOptions:{  <nil> WindowsSecurityContextOptions contain Windows-specific options and credentials. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[gmsaCredentialSpec:{  <nil> GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} gmsaCredentialSpecName:{  <nil> GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} runAsUserName:{  <nil> The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} serviceAccount:{  <nil> DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} serviceAccountName:{  <nil> ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/ string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}
 shareProcessNamespace:{  <nil> Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} subdomain:{  <nil> If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} terminationGracePeriodSeconds:{  <nil> Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tolerations:{  <nil> If specified, the pod's tolerations. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{effect: {  <nil> Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoE**cute. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},key: {  <nil> Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},tolerationSeconds: {  <nil> TolerationSeconds represents the period of time the toleration (which must be of effect NoE**cute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the ******. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil ma
p[] nil nil false <nil> false false},value: {  <nil> Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} topologySpreadConstraints:{  <nil> TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. This field is alpha-level and is only honored by clusters that enables the EvenPodsSpread feature. All topologySpreadConstraints are ANDed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:TopologySpreadConstraint specifies how to spread matching pods among the given topology.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[maxSkew topologyKey whenUnsatisfiable],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{labelSelector: {  <nil> A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[matchExpressions:{  <nil> matchExpressions is a list of label selector requirements. The requirements are ANDed. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key operator],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> key is the label key that the selector applies to. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},operator: {  <nil> operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},values: {  <nil> values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],Any
Of:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} matchLabels:{  <nil> matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},maxSkew: {  <nil> MaxSkew describes the degree to which pods may be unevenly distributed. It's the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It's a required field. Default value is 1 and 0 is not allowed. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},topologyKey: {  <nil> TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},whenUnsatisfiable: {  <nil> WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It's considered as "Unsatisfiable" if and only if placing incoming pod on any topology violates "MaxSkew". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volumes:{  <nil> List of volumes that can be mounted by containers belonging to
 the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Volume represents a named volume in a pod that may be accessed by any container in the pod.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[name],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{awsElasticBlockStore: {  <nil> Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [volumeID] nil [] [] [] nil map[fsType:{  <nil> File****** type of the volume that you want to mount. Tip: Ensure that the file****** type is supported by the host operating ******. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} partition:{  <nil> The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volumeID:{  <nil> Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},azureDisk: {  <nil> AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [diskName diskURI] nil [] [] [] nil map[cachingMode:{  <nil> Host Caching mode: None, Read Only, Read Write. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} diskName:{  <nil> The Name of the data disk in the blob storage string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} diskURI:{  <nil> The URI the data disk in the blob storage string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fsType:{  <nil> File****** type to mount. Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} kind:{  <nil> Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false
}] nil map[] map[] nil map[] nil nil false <nil> false false},azureFile: {  <nil> AzureFile represents an Azure File Service mount on the host and bind mount to the pod. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [secretName shareName] nil [] [] [] nil map[readOnly:{  <nil> Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretName:{  <nil> the name of secret that contains Azure Storage Account Name and Key string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} shareName:{  <nil> Share Name string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},cephfs: {  <nil> Represents a Ceph File****** mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [monitors] nil [] [] [] nil map[monitors:{  <nil> Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Optional: Used as the mounted ****, rather than the full Ceph tree, default is / string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretFile:{  <nil> Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> Optional: User is the rados user name, de
fault is ***** More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},cinder: {  <nil> Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [volumeID] nil [] [] [] nil map[fsType:{  <nil> File****** type to mount. Must be a file****** type supported by the host operating ******. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} volumeID:{  <nil> volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},configMap: {  <nil> Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[defaultMode:{  <nil> Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} items:{  <nil> If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Maps a string key to a path within a volume.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key path],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The key to project. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},mode: {  <nil> Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},path: {  <nil> The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the ConfigMap or its keys must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},csi: {  <nil> Represents a source location of a volume to mount, managed by an external CSI driver object   nil <nil> false <nil
> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [driver] nil [] [] [] nil map[driver:{  <nil> Driver is the name of the CSI driver that handles this volume. Consult with your ***** for the correct name as registered in the cluster. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fsType:{  <nil> File****** type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default file****** to apply. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} nodePublishSecretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Specifies a read-only configuration for the volume. Defaults to false (read/write). boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volumeAttributes:{  <nil> VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},downwardAPI: {  <nil> DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[defaultMode:{  <nil> Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} items:{  <nil> Items is a list of downward API volume file array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:DownwardAPIVolumeFile represents information to create the file containing the pod field,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[path],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{fieldRef: {  <nil> ObjectFieldSelector selects an APIVersioned field of an object. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [fieldPath] nil [] [] [] nil map[apiVersion:{  <nil> Version of the schema the FieldPath is written in terms of, defaults to "v1". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fieldPath:{  <nil> Path of the field to select in the specified API version. str
ing   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},mode: {  <nil> Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},path: {  <nil> Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},resourceFieldRef: {  <nil> ResourceFieldSelector represents container resources (cpu, memory) and their output format object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [resource] nil [] [] [] nil map[containerName:{  <nil> Container name: required for volumes, optional for env vars string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} divisor:{  <nil> Quantity is a fi**d-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.*** will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this e**rcise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fi**d point implementation. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resource:{  <nil> Required: resource to select string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},emptyDir: {  <nil> Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[medium:{  <nil> What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} sizeLimit:{  <nil> Quantity is a fi**d-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.*** will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this e**rcise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fi**d point implementation. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},fc: {  <nil> Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[fsType:{  <nil> File****** type to mount. Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} lun:{  <nil> Optional: FC target lun number integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} targetWWNs:{  <nil> Optional: FC target worldwide names (WWNs) array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} wwids:{  <nil> Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},flexVolume: {  <nil> FlexVolume represents a generic volume resource that is provisioned/attached using an e**c based plugin. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [driver] nil [] [] [] nil map[driver:{  <nil> Driver is the name of the driver to use for this volume. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> 
[] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fsType:{  <nil> File****** type to mount. Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs", "ntfs". The default file****** depends on FlexVolume script. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} options:{  <nil> Optional: Extra command options if any. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},flocker: {  <nil> Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[datasetName:{  <nil> Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} datasetUUID:{  <nil> UUID of the dataset. This is unique identifier of a Flocker dataset string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},gcePersistentDisk: {  <nil> Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [pdName] nil [] [] [] nil map[fsType:{  <nil> File****** type of the volume that you want to mount. Tip: Ensure that the file****** type is supported by the host operating ******. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} partition:{  <nil> The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} pdName:{  <nil> Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},gitRepo: {  <nil> Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [repository] nil [] [] [] nil map[directory:{  <nil> Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} repository:{  <nil> Repository URL string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} revision:{  <nil> Commit hash for the specified revision. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},glusterfs: {  <nil> Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [endpoints path] nil [] [] [] nil map[endpoints:{  <nil> EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},hostPath: {  <nil> Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [path] nil [] [] [] nil map[path:{  <nil> Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} type:{  <nil> Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},iscsi: {  <nil> Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [targetPortal iqn lun] nil [] [] [] nil map[chapAuthDiscovery:{  <nil> whether support iSCSI Discovery CHAP authentication boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] ma
p[] nil map[] nil nil false <nil> false false} chapAuthSession:{  <nil> whether support iSCSI Session CHAP authentication boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fsType:{  <nil> File****** type of the volume that you want to mount. Tip: Ensure that the file****** type is supported by the host operating ******. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} initiatorName:{  <nil> Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} iqn:{  <nil> Target iSCSI Qualified Name. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} iscsiInterface:{  <nil> iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} lun:{  <nil> iSCSI Target Lun number. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} portals:{  <nil> iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} targetPortal:{  <nil> iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil
 nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},name: {  <nil> Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},nfs: {  <nil> Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [server path] nil [] [] [] nil map[path:{  <nil> Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} server:{  <nil> Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},persistentVolumeClaim: {  <nil> PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the ******). object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [claimName] nil [] [] [] nil map[claimName:{  <nil> ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Will force the ReadOnly setting in VolumeMounts. Default false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},photonPersistentDisk: {  <nil> Represents a Photon Controller persistent disk resource. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [pdID] nil [] [] [] nil map[fsType:{  <nil> File****** type to mount. Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} pdID:{  <nil> ID that identifies Photon Controller persistent disk string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},portworxVolume: {  <nil> PortworxVolumeSource represents a Portworx volume resource. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [volumeID] nil [] [] [] nil map[fsType:{  <nil> FSType represents the file****** type to mount Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs". I
mplicitly inferred to be "ext4" if unspecified. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volumeID:{  <nil> VolumeID uniquely identifies a Portworx volume string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},projected: {  <nil> Represents a projected volume source object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [sources] nil [] [] [] nil map[defaultMode:{  <nil> Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} sources:{  <nil> list of volume projections array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Projection that may be projected along with other supported volume types,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{configMap: {  <nil> Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[items:{  <nil> If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Maps a string key to a path within a volume.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key path],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The key to project. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},mode: {  <nil> Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},path: {  <nil> The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the ConfigMap or its keys must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},downwardAPI: {  <nil> Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[items:{  <nil> Items is a list of DownwardAPIVolume file array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:DownwardAPIVolumeFile represents information to create the file containing the pod field,Ty
pe:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[path],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{fieldRef: {  <nil> ObjectFieldSelector selects an APIVersioned field of an object. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [fieldPath] nil [] [] [] nil map[apiVersion:{  <nil> Version of the schema the FieldPath is written in terms of, defaults to "v1". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} fieldPath:{  <nil> Path of the field to select in the specified API version. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},mode: {  <nil> Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},path: {  <nil> Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..' string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},resourceFieldRef: {  <nil> ResourceFieldSelector represents container resources (cpu, memory) and their output format object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [resource] nil [] [] [] nil map[containerName:{  <nil> Container name: required for volumes, optional for env vars string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} divisor:{  <nil> Quantity is a fi**d-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.*** will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this e**rcise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fi**d point implementation. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} resource:{  <nil> Required: resource to select string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},secret: {  <nil> Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[items:{  <nil> If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Maps a string key to a path within a volume.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key path],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The key to project. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},mode: {  <nil> Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},path: {  <nil> The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret or its key must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},serviceAccountToken: {  <nil> ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime file****** for use against APIs (Kubernetes API Server or otherwise). object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [path] nil [] [] [] nil map[audience:{  <nil> Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver. string   nil <nil> false <nil> false <nil> <nil>  <ni
l> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} expirationSeconds:{  <nil> ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes. integer int64  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} path:{  <nil> Path is the path relative to the mount point of the file to project the token into. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},quobyte: {  <nil> Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [registry volume] nil [] [] [] nil map[group:{  <nil> Group to map volume access to Default is no group string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} registry:{  <nil> Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} tenant:{  <nil> Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> User to map volume access to Defaults to serivceaccount user string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volume:{  <nil> Volume is a string that references an already created Quobyte volume by name. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},rbd: {  <nil> Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [monitors image] nil [] [] [] nil map[fsType:{  <nil> File****** type of the volume that you want to mount. Tip: Ensure that the file****** type is supported by the host operating ******. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ex
t4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} image:{  <nil> The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} keyring:{  <nil> Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} monitors:{  <nil> A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} pool:{  <nil> The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} user:{  <nil> The rados user name. Default is *****. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},scaleIO: {  <nil> ScaleIOVolumeSource represents a persistent ScaleIO volume object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [gateway ****** secretRef] nil [] [] [] nil map[fsType:{  <nil> File****** type to mount. Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs", "ntfs". Default is "xfs". string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} gateway:{  <nil> The host address of the ScaleIO API
 Gateway. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} protectionDomain:{  <nil> The name of the ScaleIO Protection Domain for the configured storage. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} sslEnabled:{  <nil> Flag to enable/disable SSL communication with Gateway, default false boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} storageMode:{  <nil> Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} storagePool:{  <nil> The ScaleIO Storage Pool associated with the protection domain. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} ******:{  <nil> The name of the storage ****** as configured in ScaleIO. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volumeName:{  <nil> The name of a volume already created in the ScaleIO ****** that is associated with this volume source. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},secret: {  <nil> Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[defaultMode:{  <nil> Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} items:{  <nil> If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:Maps a string key to a path within a volume.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[key path],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{key: {  <nil> The key to project. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},mode: {  <nil> Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},path: {  <nil> The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} optional:{  <nil> Specify whether the Secret or its keys must be defined boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretName:{  <nil> Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},storageos: {  <nil> Represents a StorageOS persistent volume resource. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[fsType:{  <nil> Filesyst
em type to mount. Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} readOnly:{  <nil> Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} secretRef:{  <nil> LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[name:{  <nil> Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} volumeName:{  <nil> VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volumeNamespace:{  <nil> VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},vsphereVolume: {  <nil> Represents a vSphere volume resource. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [volumePath] nil [] [] [] nil map[fsType:{  <nil> File****** type to mount. Must be a file****** type supported by the host operating ******. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} storagePolicyID:{  <nil> Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} storagePolicyName:{  <nil> Storage Policy Based Management (SPBM) profile name. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} volumePath:{  <nil> Path that identifies vSphere volume vmdk string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> fal
se false} ttlSecondsAfterFinished:{  <nil> ttlSecondsAfterFinished limits the lifetime of a Job that has finished e**cution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},status: {  <nil> JobStatus represents the current state of a Job. object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[active:{  <nil> The number of actively running pods. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} completionTime:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} conditions:{  <nil> The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:JobCondition describes current state of a job.,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[type status],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{lastProbeTime: {  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},lastTransitionTime: {  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},message: {  <nil> Human readable message indicating details about last transition. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},reason: {  <nil> (brief) reason for the condition's last transition. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},status: {  <nil> Status of the condition, one of True, False, Unknown. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},type: {  <nil> Type of job condition, Complete or Failed. string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map
[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} failed:{  <nil> The number of pods which reached phase Failed. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} startTime:{  <nil> Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers. string date-time  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} succeeded:{  <nil> The number of pods which reached phase Succeeded. integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} profile:{  <nil> Profile is the profile in use (see ** profile) string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} promotionEngine:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} prowConfig:{  <nil> ProwConfig is the way we manage prow configurations string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} prowEngine:{  <nil> ProwEngine is the kind of prow engine used such as knative build or build pipeline string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} quickstartLocations:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:QuickStartLocation,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{excludes: {  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [
] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},gitKind: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},gitUrl: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},includes: {  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:string,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},owner: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} storageLocations:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:StorageLocation,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[],MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[],OneOf:[],AnyOf:[],Not:nil,Properties:map[string]JSONSchemaProps{bucketUrl: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},classifier: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},gitBranch: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},gitUrl: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},JSONSchemas:[],} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} useGitOps:{  <nil>  boolean   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} versionStreamRef:{  <nil> VersionStreamRef contains the git ref (tag or branch) in the VersionStreamURL repository to use as the version stream string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil []
 [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false} versionStreamUrl:{  <nil> VersionStreamURL contains the git clone URL for the Version Stream which is the set of versions to use for charts, images, packages etc string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false} webHookEngine:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},status: {  <nil> EnvironmentStatus is the status for an Environment resource object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[version:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false}] nil map[] map[] nil map[] nil nil false <nil> false false},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,},} nil [] [{Namespace string  The namespace used for the environment 0 .spec.namespace} {Kind string  The kind of environment 0 .spec.kind} {Promotion string  The strategy used for promoting to this environment 0 .spec.promotionStrategy} {Order integer  The order in which environments are automatically promoted 0 .spec.order} {Git URL string  The Git repository URL for the source of the environment configuration 0 .spec.source.url} {Git Branch string  The git branch for the source of the environment configuration 0 .spec.source.ref}] nil <nil>}
Error creating environments.jenkins.io: Post https://172.30.0.1:443/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions: dial tcp 172.30.0.1:443: connect: connection refused
Error creating environments.jenkins.io: Post https://172.30.0.1:443/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions: dial tcp 172.30.0.1:443: connect: connection refused
Error creating environments.jenkins.io: Post https://172.30.0.1:443/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions: dial tcp 172.30.0.1:443: connect: connection refused
Error creating environments.jenkins.io: Post https://172.30.0.1:443/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions: dial tcp 172.30.0.1:443: connect: connection refused
error: customresourcedefinitions.apiextensions.k8s.io "environments.jenkins.io" already exists
Error creating environments.jenkins.io: customresourcedefinitions.apiextensions.k8s.io "environments.jenkins.io" already exists
[31m
Pipeline failed on stage 'from-build-pack' : container 'step-promote-jx-preview'. The execution of the pipeline has stopped.[0m
